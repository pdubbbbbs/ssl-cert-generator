name: CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    continue-on-error: false

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies
      id: install
      run: |
        sudo apt-get update
        sudo apt-get install -y openssl shellcheck
      if: success()

    - name: Shell script syntax check
      id: lint
      run: |
        shellcheck generate-ssl-cert.sh
        shellcheck install-proxmox-cert.sh
      if: steps.install.outcome == 'success'

    - name: Test certificate generation
      id: cert_gen
      run: |
        chmod +x generate-ssl-cert.sh
        # Test with minimal parameters
        ./generate-ssl-cert.sh -d test.example.com -o ./certs
        if [ ! -f "./certs/test.example.com.crt" ]; then
          echo "Basic certificate generation failed"
          exit 1
        fi
        
        # Test with all parameters
        ./generate-ssl-cert.sh \
          -d full.example.com \
          -o ./certs \
          -c US \
          -s "California" \
          -l "San Francisco" \
          -org "Test Org" \
          -ou "Test Unit" \
          -e "test@example.com" \
          -v 365 \
          -k 2048 \
          -i "192.168.1.1"
        
        if [ ! -f "./certs/full.example.com.crt" ]; then
          echo "Full parameter certificate generation failed"
          exit 1
        fi
        
        # Verify certificates
        echo "Verifying certificates..."
        openssl x509 -in ./certs/test.example.com.crt -text -noout
        openssl x509 -in ./certs/full.example.com.crt -text -noout
      if: steps.lint.outcome == 'success'

    - name: Security scan
      id: security
      uses: github/codeql-action/init@v2
      with:
        languages: shell
      if: steps.cert_gen.outcome == 'success'

    - name: Run CodeQL Analysis
      id: codeql
      uses: github/codeql-action/analyze@v2
      if: steps.security.outcome == 'success'

    - name: Prepare test report
      id: report
      if: always()
      run: |
        echo "Test Results Summary:" > test_report.txt
        echo "-------------------" >> test_report.txt
        echo "Dependencies: ${{ steps.install.outcome }}" >> test_report.txt
        echo "Linting: ${{ steps.lint.outcome }}" >> test_report.txt
        echo "Certificate Generation: ${{ steps.cert_gen.outcome }}" >> test_report.txt
        echo "Security Scan: ${{ steps.security.outcome }}" >> test_report.txt
        echo "CodeQL Analysis: ${{ steps.codeql.outcome }}" >> test_report.txt

    - name: Send email on failure
      if: failure()
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: ${{secrets.SMTP_SERVER}}
        server_port: ${{secrets.SMTP_PORT}}
        username: ${{secrets.SMTP_USERNAME}}
        password: ${{secrets.SMTP_PASSWORD}}
        subject: "⚠️ SSL Certificate Generator: Build Failed"
        body: |
          SSL Certificate Generator build has failed!
          
          Repository: ${{ github.repository }}
          Commit: ${{ github.sha }}
          
          Test Results:
          $(cat test_report.txt)
          
          Failed Step: ${{ steps.install.outcome == 'failure' && 'Dependencies' || steps.lint.outcome == 'failure' && 'Linting' || steps.cert_gen.outcome == 'failure' && 'Certificate Generation' || steps.security.outcome == 'failure' && 'Security Scan' || steps.codeql.outcome == 'failure' && 'CodeQL Analysis' || 'Unknown' }}
          
          View detailed logs:
          ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        to: ${{secrets.NOTIFICATION_EMAIL}}
        from: SSL Certificate Generator CI <${{secrets.SMTP_USERNAME}}>

    - name: Send success notification
      if: success()
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: ${{secrets.SMTP_SERVER}}
        server_port: ${{secrets.SMTP_PORT}}
        username: ${{secrets.SMTP_USERNAME}}
        password: ${{secrets.SMTP_PASSWORD}}
        subject: "✅ SSL Certificate Generator: Build Succeeded"
        body: |
          SSL Certificate Generator build completed successfully!
          
          Repository: ${{ github.repository }}
          Commit: ${{ github.sha }}
          
          Test Results:
          $(cat test_report.txt)
          
          All tests passed successfully. No action required.
          
          View detailed logs:
          ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
        to: ${{secrets.NOTIFICATION_EMAIL}}
        from: SSL Certificate Generator CI <${{secrets.SMTP_USERNAME}}>

