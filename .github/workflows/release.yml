name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Create Release Bundle
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          RELEASE_NAME="ssl-cert-generator-${VERSION}"
          mkdir -p "${RELEASE_NAME}"
          cp generate-ssl-cert.sh "${RELEASE_NAME}/"
          cp install-proxmox-cert.sh "${RELEASE_NAME}/"
          cp README.md "${RELEASE_NAME}/"
          cp LICENSE "${RELEASE_NAME}/"
          cp -r docs "${RELEASE_NAME}/"
          tar czf "${RELEASE_NAME}.tar.gz" "${RELEASE_NAME}"
          zip -r "${RELEASE_NAME}.zip" "${RELEASE_NAME}"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          body: |
            Release ${{ github.ref }}
            
            Please refer to [CHANGELOG.md](CHANGELOG.md) for detailed changes.

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ssl-cert-generator-${{ github.ref_name }}.tar.gz
          asset_name: ssl-cert-generator-${{ github.ref_name }}.tar.gz
          asset_content_type: application/gzip

      - name: Upload ZIP Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ssl-cert-generator-${{ github.ref_name }}.zip
          asset_name: ssl-cert-generator-${{ github.ref_name }}.zip
          asset_content_type: application/zip
